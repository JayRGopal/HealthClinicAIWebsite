// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BlogPost {
  id        String   @id @default(cuid())
  title     String
  author    String
  tagline   String
  content   String
  mainImage String
  imageUrls String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

/**
 * export type Patient = {
 * name: string;
 * insurer: string;
 * };
 * export type PatientEvent = {
 * date: string;
 * type: string;
 * content?: string;
 * transcript?: string;
 * summary?: string;
 * };
 */

model Patient {
  id           String      @id @default(cuid())
  name         String      @default("patient_name")
  name_iv      String? // now nullable (defaults to NULL)
  name_tag     String? // likewise
  dob          DateTime    @default(dbgenerated("'1000-01-01T00:00:00.000Z'")) // default to a sentinel value
  address      String? // nullable
  address_iv   String? // nullable
  address_tag  String? // nullable
  sex          String? // nullable
  sex_iv       String? // nullable
  sex_tag      String? // nullable
  insurer      String      @default("insurer_name") // default to "insurer_name"
  insurer_iv   String? // nullable
  insurer_tag  String? // nullable
  encounters   Encounter[]
  serviceStart DateTime    @default(dbgenerated("'1900-01-01T00:00:00.000Z'")) // default to a sentinel value
  serviceEnd   DateTime?

  zipCode     String? // already nullable
  zipCode_iv  String? // already nullable
  zipCode_tag String? // already nullable
  groupNumber String? // already nullable

  billerId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Physician {
  id        String   @id @default(cuid())
  name      String
  name_iv   String? // nullable
  name_tag  String? // nullable
  npi       String   @unique
  opn       String? // optional, can be null
  address   String?
  phone     String?
  email     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Add a relation to the encounter model
  encounters Encounter[]
}

model Encounter {
  id            String   @id @default(cuid())
  patientId     String
  physicianId   String
  dateOfService DateTime
  content       String?
  summary       String?

  facilityName String? // already nullable

  appointmentType String
  placeOfService  String?
  // Add an array of file urls
  fileUrls        String[]
  status          String   @default("Pending") // default to "PENDING"

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Add a relation to the Patient model
  patient   Patient        @relation(fields: [patientId], references: [id])
  physician Physician      @relation(fields: [physicianId], references: [id])
  actions  billerAction[] 
}

enum Action {
  ELIBIGIBILITY_AND_BENEFITS
  APPEALS
  CLAIM_STATUS_INQUIRIES
  DENIALS
}

model billerAction {
  id          String   @id @default(cuid())
  encounterId String
  date        DateTime
  type        Action
  content     String?
  transcript  String?
  summary     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  // Add an array of file urls
  fileUrls    String[]

  encounter Encounter @relation(fields: [encounterId], references: [id])
}
